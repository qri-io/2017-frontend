{
  "name": "qri",
  "private": true,
  "productName": "qri",
  "version": "0.7.2",
  "description": "qri (\"query\") frontend application",
  "keywords": [],
  "homepage": "https://qri.io",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/qri-io/frontend.git"
  },
  "author": {
    "name": "qri, inc.",
    "email": "sparkle_pony_2000@qri.io",
    "url": "https://github.com/qri-io"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/qri-io/frontend/issues"
  },
  "scripts": {
    "lint": "standard",
    "lint:fix": "npm run lint -- --fix",
    "lint:styles": "stylelint app/*.css app/components/*.css --syntax scss",
    "lint:styles-fix": "stylefmt -r app/*.css app/components/*.css",
    "codecov": "codecov",
    "test": "jest",
    "test:watch": "npm test -- --watch",
    "postinstall": "electron-builder install-app-deps",
    "web:dev": "cross-env START_HOT=1 npm run web:start:dev",
    "web:build": "cross-env NODE_OPTIONS=\"--max_old_space_size=10000\" NODE_ENV=production node --trace-warnings -r @babel/register ./node_modules/webpack/bin/webpack --config webpack.config.webapp.prod.js --colors",
    "web:readonly:dev": "cross-env START_HOT=1 npm run web:start:readonly:dev",
    "web:build:readonly": "cross-env NODE_OPTIONS=\"--max_old_space_size=10000\" NODE_ENV=production node --trace-warnings -r @babel/register ./node_modules/webpack/bin/webpack --config webpack.config.readonly.prod.js --colors",
    "web:build:dev": "cross-env NODE_OPTIONS=\"--max_old_space_size=10000\" NODE_ENV=development node --trace-warnings -r @babel/register ./node_modules/webpack/bin/webpack --config webpack.config.webapp.dev.js --colors",
    "web:start:dev": "cross-env NODE_ENV=development node --trace-warnings -r @babel/register ./node_modules/webpack-dev-server/bin/webpack-dev-server --config webpack.config.webapp.dev.js",
    "web:start:readonly:dev": "cross-env NODE_ENV=development node --trace-warnings -r @babel/register ./node_modules/webpack-dev-server/bin/webpack-dev-server --config webpack.config.readonly.dev.js",
    "electron:start": "cross-env NODE_ENV=production electron ./app/",
    "electron:start:dev": "cross-env START_HOT=1 npm run electron:start:dev:renderer",
    "electron:start:dev:main": "cross-env HOT=1 NODE_ENV=development electron -r @babel/register ./app/main.dev",
    "electron:start:dev:renderer": "cross-env NODE_ENV=development node --trace-warnings -r @babel/register ./node_modules/webpack-dev-server/bin/webpack-dev-server --config webpack.config.renderer.dev.js",
    "electron:build": "concurrently \"npm run electron:build:main\" \"npm run electron:build:renderer\"",
    "electron:build:main": "cross-env NODE_ENV=production node --trace-warnings -r @babel/register ./node_modules/webpack/bin/webpack --config webpack.config.main.prod.js --colors",
    "electron:build:renderer": "cross-env NODE_OPTIONS=\"--max_old_space_size=10000\" NODE_ENV=production node --trace-warnings -r @babel/register ./node_modules/webpack/bin/webpack --config webpack.config.renderer.prod.js --colors",
    "electron:build:debug": "concurrently \"npm run electron:build:main\" \"npm run electron:build:renderer:debug\"",
    "electron:build:dll": "cross-env NODE_ENV=development node --trace-warnings -r @babel/register ./node_modules/webpack/bin/webpack --config webpack.config.renderer.dev.dll.js --colors",
    "electron:build:renderer:debug": "cross-env DEBUG_PROD=true NODE_ENV=production node --trace-warnings -r @babel/register ./node_modules/webpack/bin/webpack --config webpack.config.renderer.prod.js --colors",
    "electron:package": "npm run electron:build && build --publish never",
    "electron:package:debug": "npm run electron:build:debug && electron:build --publish never",
    "electron:package:all": "npm run electron:build && electron:build -mwl",
    "electron:package:linux": "npm run electron:build && electron:build --linux",
    "electron:package:win": "npm run electron:build && electron:build --win --x64",
    "electron:test:all": "npm run lint && npm run electron:build && npm run test && npm run electron:test:e2e",
    "electron:test:e2e": "cross-env NODE_ENV=test BABEL_DISABLE_CACHE=1 node --trace-warnings ./test/runTests.js e2e",
    "storybook": "start-storybook"
  },
  "browserslist": "electron 1.6",
  "build": {
    "productName": "qri",
    "appId": "io.qri.electron",
    "files": [
      "dist/",
      "node_modules/",
      "app.html",
      "main.prod.js",
      "main.prod.js.map",
      "package.json"
    ],
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "mac": {
      "category": "public.app-category.reference",
      "target": [
        "zip",
        "dmg"
      ],
      "publish": [
        "github"
      ],
      "extraFiles": [
        "resources/mac/qri"
      ]
    },
    "win": {
      "target": [
        "nsis"
      ],
      "extraFiles": [
        "resources/win/qri"
      ]
    },
    "linux": {
      "target": [
        "deb",
        "AppImage"
      ],
      "extraFiles": [
        "resources/linux/qri"
      ]
    }
  },
  "standard": {
    "parser": "babel-eslint",
    "ignore": [
      "/app/",
      "/internals/",
      "/dist/"
    ]
  },
  "jest": {
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js"
    ],
    "moduleDirectories": [
      "node_modules",
      "app/node_modules"
    ],
    "transform": {
      "^.+\\.js$": "babel-jest"
    },
    "setupFiles": [
      "./internals/scripts/CheckBuiltsExist.js"
    ],
    "coverageDirectory": "./coverage/",
    "collectCoverage": true,
    "globals": {
      "__BUILD__": {
        "API_URL": "http://localhost:2503",
        "BASE_URL": "http://localhost:2503",
        "MODE": "development",
        "SEGMENT_KEY": "not_a_key",
        "STATIC_ASSETS_URL": "http://localhost:2503"
      }
    }
  },
  "dependencies": {
    "@babel/core": "7.4.4",
    "@babel/plugin-proposal-class-properties": "7.4.4",
    "@babel/plugin-proposal-decorators": "7.4.4",
    "@babel/plugin-proposal-do-expressions": "7.2.0",
    "@babel/plugin-proposal-export-default-from": "7.2.0",
    "@babel/plugin-proposal-export-namespace-from": "7.2.0",
    "@babel/plugin-proposal-function-bind": "7.2.0",
    "@babel/plugin-proposal-function-sent": "7.2.0",
    "@babel/plugin-proposal-json-strings": "7.2.0",
    "@babel/plugin-proposal-logical-assignment-operators": "7.2.0",
    "@babel/plugin-proposal-nullish-coalescing-operator": "7.4.4",
    "@babel/plugin-proposal-numeric-separator": "7.2.0",
    "@babel/plugin-proposal-optional-chaining": "7.2.0",
    "@babel/plugin-proposal-pipeline-operator": "7.3.2",
    "@babel/plugin-proposal-throw-expressions": "7.2.0",
    "@babel/plugin-syntax-dynamic-import": "7.2.0",
    "@babel/plugin-syntax-import-meta": "7.2.0",
    "@babel/plugin-transform-classes": "7.4.4",
    "@babel/preset-env": "7.4.4",
    "@babel/preset-react": "7.0.0",
    "@babel/register": "7.4.4",
    "@storybook/addon-actions": "5.0.11",
    "babel-core": "7.0.0-bridge.0",
    "babel-eslint": "10.0.1",
    "babel-jest": "24.8.0",
    "babel-loader": "8.0.6",
    "babel-minify-webpack-plugin": "0.3.1",
    "babel-plugin-add-module-exports": "1.0.2",
    "babel-plugin-dev-expression": "0.2.1",
    "babel-plugin-dynamic-import-webpack": "1.1.0",
    "babel-plugin-import": "1.11.2",
    "babel-plugin-object-rest-spread": "0.0.0",
    "babel-preset-react-hmre": "1.1.1",
    "babel-preset-react-optimize": "1.0.1",
    "chalk": "2.4.2",
    "clone-deep": "4.0.1",
    "codecov": "3.5.0",
    "compare-versions": "3.4.0",
    "concurrently": "4.1.0",
    "connected-react-router": "6.4.0",
    "core-js": "2",
    "cross-env": "5.2.0",
    "cross-spawn": "6.0.5",
    "css-loader": "2.1.1",
    "devtron": "1.4.0",
    "electron": "4.1.4",
    "electron-builder": "20.40.2",
    "electron-debug": "2.2.0",
    "electron-devtools-installer": "2.2.4",
    "electron-log": "3.0.5",
    "electron-updater": "4.0.6",
    "encoding": "0.1.12",
    "enzyme": "3.9.0",
    "enzyme-to-json": "3.3.5",
    "express": "4.17.0",
    "file-loader": "3.0.1",
    "global": "4.3.2",
    "handsontable": "7.0.3",
    "history": "4.9.0",
    "html-webpack-plugin": "3.2.0",
    "identity-obj-proxy": "3.0.0",
    "import": "0.0.6",
    "isomorphic-fetch": "2.2.1",
    "jest": "24.8.0",
    "jsdom": "15.1.0",
    "lodash.debounce": "4.0.8",
    "merge": "1.2.1",
    "mini-css-extract-plugin": "0.6.0",
    "minimist": "1.2.2",
    "monaco-editor": "0.16.2",
    "monaco-editor-webpack-plugin": "1.7.0",
    "node-fetch": "2.6.0",
    "node-sass": "4.12.0",
    "normalizr": "3.3.0",
    "npm": "6.9.0",
    "prop-types": "15.7.2",
    "query-string": "6.5.0",
    "react": "16.8.6",
    "react-dom": "16.8.6",
    "react-handsontable": "0.3.2",
    "react-hot-loader": "4.8.5",
    "react-monaco-editor": "0.25.1",
    "react-redux": "7.0.3",
    "react-router": "5.0.0",
    "react-router-dom": "5.0.0",
    "react-router-redux": "4.0.8",
    "react-tooltip": "3.10.0",
    "redux": "4.0.1",
    "redux-logger": "3.0.6",
    "redux-testkit": "1.0.6",
    "redux-thunk": "2.3.0",
    "rimraf": "2.6.3",
    "sass-loader": "7.1.0",
    "source-map-support": "0.5.12",
    "standard": "12.0.1",
    "style-loader": "0.23.1",
    "stylefmt": "6.0.3",
    "stylelint": "10.0.1",
    "url-loader": "1.1.2",
    "webpack": "4.31.0",
    "webpack-bundle-analyzer": "3.3.2",
    "webpack-cli": "3.3.2",
    "webpack-dev-server": "3.4.1",
    "webpack-merge": "4.2.1",
    "webpack-sources": "1.3.0"
  },
  "devEngines": {
    "node": ">=7.x",
    "npm": ">=4.x",
    "yarn": ">=0.21.3"
  },
  "devDependencies": {
    "@storybook/react": "5.0.11",
    "fetch-mock": "7.3.3",
    "redux-mock-store": "1.5.3"
  }
}
